#BlueJ class context
comment0.target=Vocabulary
comment0.text=\r\n\ Write\ a\ description\ of\ class\ Vocabulary\ here.\r\n\r\n\ @author\ Nishna\ Aerabati\ \r\n\ @version\ 11/15/2021\r\n
comment1.params=
comment1.target=Vocabulary()
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ Vocabulary\r\n
comment2.params=args
comment2.target=void\ main(java.lang.String[])
comment2.text=\r\n\ main\ method\ which\ runs\ the\ read,\ print,\ and\ writeToFile\ methods\r\n
comment3.params=
comment3.target=void\ read()
comment3.text=\r\n\ Adds\ ever\ single\ word\ after\ splitting\ the\ file\ into\ an\ array\ list,\ \r\n\ which\ removes\ all\ the\ words\ that\ are\ just\ spaces\ or\ tabs\ and\ \r\n\ then\ adding\ each\ word\ to\ the\ hashmap\ with\ its\ corresponding\ count\r\n
comment4.params=
comment4.target=int\ findDifferent()
comment4.text=\r\n\ @return\ an\ integer\ which\ is\ the\ amount\ of\ different\ words\ in\ the\ Hamlet\ file\r\n\ or\ the\ size\ of\ the\ hashmap\ \r\n
comment5.params=
comment5.target=java.lang.String\ findMax()
comment5.text=\r\n\ @return\ a\ string\ key\ which\ is\ the\ word\ that\ has\ the\ highest\ frequency\r\n\ in\ the\ Hamley\ file\r\n
comment6.params=
comment6.target=java.util.HashMap\ commonWords()
comment6.text=\r\n\ @return\ a\ hashmap\ with\ each\ of\ the\ values\ and\ keys\ only\ for\ the\ common\ words\r\n\ rather\ than\ every\ single\ word\r\n
comment7.params=
comment7.target=void\ print()
comment7.text=\r\n\ prints\ out\ in\ a\ loop\ very\ word\ and\ its\ corrresponding\ value\ \r\n\ and\ then\ print\ out\ the\ common\ words\ hashmap\ and\ the\ amount\ \r\n\ of\ different\ words\ and\ the\ word\ that\ appears\ the\ most\ \r\n
comment8.params=
comment8.target=void\ writeToFile()
comment8.text=\r\n\ writes\ everything\ in\ the\ print\ method\ also\ into\ to\ a\ new\ text\ file\ \r\n
numComments=9
